#!/usr/bin/env python3

import sys, os
import os.path as osp
import shutil
import json
from datetime import date

projectFolder = os.path.realpath(os.path.join(os.path.dirname(__file__), '..'))
learningFile = os.path.join(projectFolder, 'thesis/model/learning.json')
#log_path = os.path.join(projectFolder, 'assimilator_log.txt')
filesForAgregationPath = os.path.join(projectFolder, 'thesis/model/results')
    
def get_batch_number(filepath):
    # Expects that filename = {appname}_{batch}...
    filename = os.path.basename(filepath)
    filename_without_extension = os.path.splitext(filename)[0]
    parts = filename_without_extension.split('_')
    batch_number = int(parts[1])
    return batch_number

if sys.argv[1]!='--error':
    # Get iteration number from the learning file
    with open(learningFile, 'r') as f:
        data = json.load(f)
    
    #Write wu_id and files to log file
    #with open(log_path, 'a') as f:
    #    for arg in sys.argv[1:]:
    #        f.write(arg + ' ')
    
    gradientFile = sys.argv[2]
    if get_batch_number(gradientFile) == data['iterationNumber']:
        shutil.copy(gradientFile, filesForAgregationPath)
        #with open(log_path, 'a') as f:
        #    f.write("File transferred")
            
    #with open(log_path, 'a') as f:
    #    f.write('\n')
    
    '''
    #Write wu_id and tgz path to log file
    with open(log_path, 'a') as f:
        for arg in sys.argv[1:]:
            f.write(arg + ' ')
        f.write('\n')
    
    #Parse filename of txt, which has been extracted during validation
    #If it's on the same iteration as the model, save it
    txt_file_path = os.path.splitext(sys.argv[2])[0] + '.txt'
    if get_batch_number(txt_file_path) == iteration_number:
        shutil.copy(txt_file_path, files_for_agregation_path)
    
    #Delete txt file extracted during validation
    #(tgz file is deleted by file_deleter daemon, txt isn't)
    if os.path.exists(txt_file_path):
        os.remove(txt_file_path)
        '''
